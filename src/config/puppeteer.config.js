import puppeteer from "puppeteer";
import {  PutObjectCommand } from "@aws-sdk/client-s3";
import 'dotenv/config'; 

import s3Client from "./aws.config";

export const savePdfToFile = async (htmlContent, fileName, folderName) => {
  let browser;
  try {
    
    // 1. --- Launch Puppeteer and Generate PDF Buffer ---
    
    // This part remains the same as your original code.
    browser = await puppeteer.launch({
      headless: true,
      args: ["--no-sandbox", "--disable-setuid-sandbox"], 
      // Important for Linux/Docker environments
    });
    const page = await browser.newPage();
    await page.setContent(htmlContent, { waitUntil: "networkidle0" });
    const pdfBuffer = await page.pdf({
      format: "A4",
      printBackground: true,
      margin: { top: "20px", right: "20px", bottom: "20px", left: "20px" },
    });

    
    // 2. --- Prepare S3 Upload ---
    
    // Instead of writing to a file, we prepare the upload command.
    const bucketName = process.env.S3_BUCKET_NAME;
    const s3Key = `${folderName}/${fileName}`; 
    // The full path in the S3 bucket

    const command = new PutObjectCommand({
      Bucket: bucketName,
      Key: s3Key,
      Body: pdfBuffer, 
      // The PDF data generated by Puppeteer
      ContentType: "application/pdf", 
      // Set the correct MIME type for PDFs
    });

    
    // 3. --- Execute S3 Upload ---
    await s3Client.send(command);

    console.log(`PDF successfully generated and uploaded to S3: ${s3Key}`);
    
    
    // 4. --- Return S3 Object Information ---
    
    // It's more useful to return the S3 key and the final URL.
    const s3Url = `https://${bucketName}.s3.${process.env.AWS_REGION}.amazonaws.com/${s3Key}`;
    
    return {
      key: s3Key,
      url: s3Url,
    };

  } catch (error) {
    console.error("Error generating or uploading PDF to S3:", error);
    throw new Error("Failed to create and upload the PDF.");
  } finally {
    
    // Ensure the browser is always closed, even if an error occurs.
    if (browser) {
      await browser.close();
    }
  }
};